{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useSelector,useDispatch}from'react-redux';import{Card,Modal,Button,Spinner}from'react-bootstrap';import{deleteUserAddress,getAllAddress,checkTokenValidation,logout}from'../actions/userActions';import{DELETE_USER_ADDRESS_RESET,GET_SINGLE_ADDRESS_RESET}from'../constants';import{useHistory}from'react-router-dom';import CreateAddressComponent from'../components/CreateAddressComponent';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AllAddressesOfUserPage(){let history=useHistory();// check token validation reducer\nconst checkTokenValidationReducer=useSelector(state=>state.checkTokenValidationReducer);const{error:tokenError}=checkTokenValidationReducer;const dispatch=useDispatch();const[deleteAddress,setDeleteAddress]=useState(\"\");const[createAddress,setCreateAddress]=useState(false);// modal state and functions\nconst[show,setShow]=useState(false);const handleClose=()=>setShow(false);const handleShow=()=>setShow(true);// login reducer\nconst userLoginReducer=useSelector(state=>state.userLoginReducer);const{userInfo}=userLoginReducer;// get address list reducer\nconst getAllAddressesOfUserReducer=useSelector(state=>state.getAllAddressesOfUserReducer);const{addresses,loading:loadingAllAddresses}=getAllAddressesOfUserReducer;// get address list reducer\nconst deleteUserAddressReducer=useSelector(state=>state.deleteUserAddressReducer);const{success:addressDeletionSuccess}=deleteUserAddressReducer;useEffect(()=>{if(!userInfo){history.push(\"/login\");}else{dispatch(checkTokenValidation());dispatch(getAllAddress());dispatch({type:GET_SINGLE_ADDRESS_RESET});}},[dispatch,history,userInfo,addressDeletionSuccess]);if(userInfo&&tokenError===\"Request failed with status code 401\"){alert(\"Session expired, please login again.\");dispatch(logout());history.push(\"/login\");window.location.reload();}if(addressDeletionSuccess){alert(\"Address successfully deleted.\");dispatch({type:DELETE_USER_ADDRESS_RESET});dispatch(getAllAddress());}// address deletion handler\nconst deleteAddressHandler=address=>{setDeleteAddress(address);handleShow();};// address delete confirmation\nconst confirmDelete=id=>{dispatch(deleteUserAddress(id));handleClose();};// toggle Create Address Button\nconst toggleCreateAddress=()=>{setCreateAddress(!createAddress);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Modal,{show:show,onHide:handleClose,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[/*#__PURE__*/_jsx(\"i\",{style:{color:\"#e6e600\"},className:\"fas fa-exclamation-triangle\"}),\" \",\"Delete Confirmation\"]})}),/*#__PURE__*/_jsxs(Modal.Body,{children:[\"Are you sure you want to delete this address\",\" \",/*#__PURE__*/_jsxs(\"em\",{children:[\"\\\"\",deleteAddress.house_no,\", \",deleteAddress.city,\", \",deleteAddress.state,\"\\\"\"]}),\"?\"]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:()=>confirmDelete(deleteAddress.id),children:\"Confirm Delete\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleClose,children:\"Cancel\"})]})]})})}),loadingAllAddresses&&/*#__PURE__*/_jsxs(\"span\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Getting addresses\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:/*#__PURE__*/_jsx(Spinner,{animation:\"border\"})})]}),createAddress?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(CreateAddressComponent,{toggleCreateAddress:toggleCreateAddress})}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-primary mb-2 button-focus-css\",onClick:()=>toggleCreateAddress(),children:\"Add new address +\"}),addresses&&!createAddress?addresses.map((address,idx)=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Card,{className:\"p-2 mb-2\",style:{border:\"1px solid\",borderColor:\"#C6ACE7\"},children:[/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Name: \"}),address.name]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Phone No: \"}),\"+91 \",address.phone_number]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Address: \"}),address.house_no,\", near \",address.landmark,\", \",address.city,\", \",address.state,\",\",address.pin_code,/*#__PURE__*/_jsx(\"span\",{onClick:()=>deleteAddressHandler(address),children:/*#__PURE__*/_jsx(\"i\",{title:\"delete address\",className:\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"})}),/*#__PURE__*/_jsx(\"span\",{onClick:()=>history.push(`/all-addresses/${address.id}/`),children:/*#__PURE__*/_jsx(\"i\",{title:\"edit address\",className:\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"})})]})]},address.id)},idx)):\"\"]});}export default AllAddressesOfUserPage;","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","Card","Modal","Button","Spinner","deleteUserAddress","getAllAddress","checkTokenValidation","logout","DELETE_USER_ADDRESS_RESET","GET_SINGLE_ADDRESS_RESET","useHistory","CreateAddressComponent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AllAddressesOfUserPage","history","checkTokenValidationReducer","state","error","tokenError","dispatch","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","show","setShow","handleClose","handleShow","userLoginReducer","userInfo","getAllAddressesOfUserReducer","addresses","loading","loadingAllAddresses","deleteUserAddressReducer","success","addressDeletionSuccess","push","type","alert","window","location","reload","deleteAddressHandler","address","confirmDelete","id","toggleCreateAddress","children","onHide","Header","closeButton","Title","style","color","className","Body","house_no","city","Footer","variant","onClick","display","animation","map","idx","border","borderColor","name","phone_number","landmark","pin_code","title"],"sources":["E:/FrontendEcommerce/frontend/src/pages/AllAddressesOfUserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}