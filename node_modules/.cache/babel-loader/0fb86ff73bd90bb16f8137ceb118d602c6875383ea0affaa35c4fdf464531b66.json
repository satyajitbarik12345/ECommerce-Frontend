{"ast":null,"code":"export const dateCheck=param=>{//console.log(\"dateCheck ===>\", param)\n// Example: 2021-01-12\nconst dateValue=param.slice(8,10);const monthValue=param.slice(5,7);const yearValue=param.slice(0,4);switch(monthValue){case\"01\":return`${dateValue} January ${yearValue}`;case\"02\":return`${dateValue} Feburary ${yearValue}`;case\"03\":return`${dateValue} March ${yearValue}`;case\"04\":return`${dateValue} April ${yearValue}`;case\"05\":return`${dateValue} May ${yearValue}`;case\"06\":return`${dateValue} June ${yearValue}`;case\"07\":return`${dateValue} July ${yearValue}`;case\"08\":return`${dateValue} August ${yearValue}`;case\"09\":return`${dateValue} September ${yearValue}`;case\"10\":return`${dateValue} October ${yearValue}`;case\"11\":return`${dateValue} November ${yearValue}`;case\"12\":return`${dateValue} December ${yearValue}`;default:return null;}};","map":{"version":3,"names":["dateCheck","param","dateValue","slice","monthValue","yearValue"],"sources":["E:/FrontendEcommerce/frontend/src/components/GetDate.js"],"sourcesContent":["export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n"],"mappings":"AAAA,MAAO,MAAM,CAAAA,SAAS,CAAIC,KAAK,EAAK,CAChC;AACA;AACA,KAAM,CAAAC,SAAS,CAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACpC,KAAM,CAAAC,UAAU,CAAGH,KAAK,CAACE,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CACpC,KAAM,CAAAE,SAAS,CAAGJ,KAAK,CAACE,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAEnC,OAAQC,UAAU,EAChB,IAAK,IAAI,CACP,MAAO,GAAGF,SAAS,YAAYG,SAAS,EAAE,CAC5C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,aAAaG,SAAS,EAAE,CAC7C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,UAAUG,SAAS,EAAE,CAC1C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,UAAUG,SAAS,EAAE,CAC1C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,QAAQG,SAAS,EAAE,CACxC,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,SAASG,SAAS,EAAE,CACzC,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,SAASG,SAAS,EAAE,CACzC,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,WAAWG,SAAS,EAAE,CAC3C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,cAAcG,SAAS,EAAE,CAC9C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,YAAYG,SAAS,EAAE,CAC5C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,aAAaG,SAAS,EAAE,CAC7C,IAAK,IAAI,CACP,MAAO,GAAGH,SAAS,aAAaG,SAAS,EAAE,CAC7C,QACE,MAAO,KAAI,CACf,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}